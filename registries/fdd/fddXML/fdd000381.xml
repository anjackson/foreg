<?xml version="1.0" encoding="UTF-8"?>
<fdd:FDD id="fdd000381" titleName="JSON (JavaScript Object Notation)" shortName="JSON" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:fdd="http://www.digitalpreservation.gov/formats/schemas/fdd/v1" xsi:schemaLocation="http://www.digitalpreservation.gov/formats/schemas/fdd/v1 http://www.digitalpreservation.gov/formats/schemas/fdd/v1/fdd-v1-0.xsd">
	<fdd:properties>
		<fdd:gdfrGenreSelection>
			<fdd:gdfrGenre>dataset</fdd:gdfrGenre>
		</fdd:gdfrGenreSelection>
		<fdd:gdfrComposition>unitary</fdd:gdfrComposition>
		<fdd:gdfrForm>text</fdd:gdfrForm>
		<fdd:gdfrConstraint>structured</fdd:gdfrConstraint>
		<fdd:gdfrBasis>symbolic</fdd:gdfrBasis>
		<fdd:updates>
			<fdd:date>2014-01-19</fdd:date>
		</fdd:updates>
		<fdd:draftStatus>Preliminary</fdd:draftStatus>
	</fdd:properties>
	<fdd:identificationAndDescription>
		<fdd:fullName>JSON (JavaScript Object Notation); also ECMA-404, JSON Data Interchange Format</fdd:fullName>
		<fdd:keywords>
			<fdd:keyword>generic digital formats</fdd:keyword>
			<fdd:keyword>markup languages</fdd:keyword>
		</fdd:keywords>
		<fdd:description>
			<p>JSON is a lightweight, text-based, language-independent data interchange format. It was derived from the
Javascript/ECMAScript programming language, but is programming language independent.   JSON is considered as a lightweight alternative to XML, as in <a href="http://www.json.org/fatfree.html">JSON: The Fat-Free Alternative to XML</a>, a 2006 presentation by JSON&apos;s developer, Douglas Crockford.  JSON defines a small set of structuring rules for the portable representation of structured data.  JSON provides simple notation for expressing  <i>objects</i>, collections of name/value pairs, and for <i>arrays</i>, ordered lists of values.  By nesting these two basic structures, trees and other complex data structures can be represented.</p>
			<p>JSON syntax uses braces (curly brackets: {} ), square brackets ( [] ), colons, and commas to arrange values that are strings (sequences of characters in double quotes) or numbers (expressed as sequences of digits) into the two basic structures.</p>
			<p>An object is an unordered set of name/value pairs. An object begins with { (left brace) and ends with } (right brace). Each name is followed by : (colon) and the name/value pairs are separated by , (comma).  An array is an ordered collection of values. An array begins with [ (left bracket) and ends with ] (right bracket). Values are separated by , (comma).  A value can be a string in double quotes, or a number, or true or false or null, or an object or an array. These structures can be nested.</p>
			<p>Although the developer of JSON declared in 2006 that JSON is not a markup language, it is now often treated as such.  The generic JSON is used as the basis for specific formats, which specify names and for more specific syntax for values.  Examples include GeoJSON and its extension TopoJSON.  A schema language has been documented at <a href="http://json-schema.org/documentation.html">json-schema-org</a> to support specification and validation of JSON applications.</p>
		</fdd:description>
		<fdd:shortDescription>JSON is a lightweight, text-based, language-independent data interchange format. It was derived from the Javascript/ECMAScript programming language, but is programming language independent. JSON defines a small set of structuring rules for the portable representation of structured data. </fdd:shortDescription>
		<fdd:productionPhase>An interchange format, typically used during data collection or to transmit selected structured data to a system that will further manipulate the data and/or present it to end users.</fdd:productionPhase>
		<fdd:relationships>
			<fdd:relationship>
				<fdd:typeOfRelationship>Has subtype</fdd:typeOfRelationship>
				<fdd:relatedTo>
					<fdd:id>fdd000382</fdd:id>
					<fdd:shortName>GeoJSON</fdd:shortName>
					<fdd:titleName>GeoJSON</fdd:titleName>
				</fdd:relatedTo>
				<fdd:comment>Has an extension TopoJSON.</fdd:comment>
			</fdd:relationship>
			<fdd:relationship>
				<fdd:typeOfRelationship>Has subtype</fdd:typeOfRelationship>
				<fdd:comment>Formats for other specific applications where interactive data interchange on the Web is important, not described separately in this resource.</fdd:comment>
			</fdd:relationship>
		</fdd:relationships>
	</fdd:identificationAndDescription>
	<fdd:localUse>
		<fdd:experience>
			<p>The Library of Congress is accumulating an archive of Twitter posts as part of its collections.  This archive, not currently accessible to the public, is in the JSON format.</p>
			<p>JSON is available for item displays of many digital items in the Library of Congress collections as presented on the Web.  For example, JSON is available for every page generated in the <a href="http://www.loc.gov/pictures/">Prints and Photographs Online Catalog</a> and maps found through <a href="http://www.loc.gov/maps/collections/">Collections with Maps</a>.  JSON is one of the data serializations provided as an output format from <a href="http://id.loc.gov/">id.loc.gov</a>, a service that makes available as Linked Data standards and vocabularies promulgated by the Library of Congress.</p>
		</fdd:experience>
	</fdd:localUse>
	<fdd:sustainabilityFactors>
		<fdd:disclosure>Openly documented.  Developed by David Crockford in 2001.  Later specified as RFC 4627 and ECMA-404.</fdd:disclosure>
		<fdd:documentation>
			<a href="http://www.ietf.org/rfc/rfc4627.txt">RFC 4627</a>, July 2006. Also as <a href="http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf">ECMA-404: The JSON Data Interchange Format</a>, October 2013.</fdd:documentation>
		<fdd:adoption>
			<p>Very widely used in web applications.  <a href="https://devcentral.f5.com/articles/the-stealthy-ascendancy-of-json">The Stealthy Ascendancy of JSON</a>, a blog post from 2011, says &quot;Today there are 1262 JSON APIs registered, which means a growth rate of 565% in the past eight months, nearly catching up to XML which currently lists 2162 APIs. At this rate, JSON will likely overtake XML as the preferred format [for web applications] by the end of 2011.&quot;</p>
			<p>There are JSON libraries or built-in JSON support for many programming languages and systems, including: ActionScript, C, C++, C#, Cold Fusion, Java, Lisp, Perl, Objective-C, OCAML, PHP, Python, Ruby.</p>
			<p>ESRI has developed a JSON-based <a href="http://www.esri.com/industries/landing-pages/geoservices/geoservices">GeoServices REST Specification</a> as a simple API to its GIS Server application to support
&quot;client-side development environments with the ArcGIS Web mapping APIs
for JavaScript(tm), Flex(tm), Silverlight(R), iOS(R), and Android(tm).&quot;  Note that this specification is richer, and enables more functionality than the simple <fddLink id="fdd000382">GeoJSON</fddLink> format.  This specification is covered by the Open Web Foundation Agreement. &quot;Following the open source model similar to the Creative Commons, the foundation is aimed at building a lightweight framework to help communities deal with the legal requirements necessary to create successful and widely adopted specifications.&quot;</p>
		</fdd:adoption>
		<fdd:licensingAndPatents>None associated with the basic format.</fdd:licensingAndPatents>
		<fdd:transparency>
			<p>JSON is based on text using UNICODE and uses a very simple structure.  It is easy for humans to read and write and for machines to parse and generate.  UTF-8 is most commonly used, but UTF-16 and UTF-32 are also permitted.</p>
		</fdd:transparency>
		<fdd:selfDocumentation>
			<p>Since JSON objects consist of name/value pairs, the names of fields or variables are expressed explicitly.  JSON has no particular mechanism for further explaining the names used in a particular stream or file containing name/value pairs.</p>
		</fdd:selfDocumentation>
		<fdd:externalDependencies>None</fdd:externalDependencies>
		<fdd:techProtection>None</fdd:techProtection>
	</fdd:sustainabilityFactors>
	<fdd:qualityAndFunctionalityFactors>
		<fdd:datasetQF>
			<fdd:normalDataset>
				<p>JSON is intended for data interchange and does not employ strong data-typing for numbers or have explicit support for dates.  All data is represented as text, with numbers being in base 10 as sequences of digits (including the common exponent notation to express very small or very large numbers).  JSON is not appropriate for applications requiring
binary data.  Boolean values <i>true</i> and <i>false</i> are allowed as values.  There is minimal support for coding missing data, using the <i>null</i> value.</p>
			</fdd:normalDataset>
			<fdd:accessSoftware>JSON is so simple that support for reading or writing it is integrated into almost every system or programming language used for applications on the Web.</fdd:accessSoftware>
			<fdd:dataDocumentation>There is no support in JSON per se for representing provenance metadata, but quantitative or qualitative assessments of quality or indications of provenance can be transmitted with data for applications that require such assessments.</fdd:dataDocumentation>
			<fdd:beyondDataset>None.</fdd:beyondDataset>
		</fdd:datasetQF>
	</fdd:qualityAndFunctionalityFactors>
	<fdd:fileTypeSignifiers>
		<fdd:signifiersGroup>
			<fdd:filenameExtension>
				<fdd:sigValues>
					<fdd:sigValue>json</fdd:sigValue>
				</fdd:sigValues>
			</fdd:filenameExtension>
			<fdd:internetMediaType>
				<fdd:sigValues>
					<fdd:sigValue>application/json</fdd:sigValue>
				</fdd:sigValues>
				<fdd:note>From <a href="http://www.ietf.org/rfc/rfc4627.txt">RFC 4627</a>.  The MIME type registered with IANA.</fdd:note>
			</fdd:internetMediaType>
			<fdd:magicNumbers>
				<fdd:sigValueNA>Not found.</fdd:sigValueNA>
				<fdd:note>
					<a href="http://www.ietf.org/rfc/rfc4627.txt">RFC 4627</a> indicates <i>n/a</i> for magic number.</fdd:note>
			</fdd:magicNumbers>
		</fdd:signifiersGroup>
		<fdd:signifiersGroup>
			<fdd:internetMediaType>
				<fdd:sigValues>
					<fdd:sigValue>text/json</fdd:sigValue>
					<fdd:sigValue>text/javascript</fdd:sigValue>
				</fdd:sigValues>
				<fdd:note>These values are found on occasion according to <a href="http://en.wikipedia.org/wiki/JSON#MIME_type">http://en.wikipedia.org/wiki/JSON#MIME_type</a>. </fdd:note>
			</fdd:internetMediaType>
		</fdd:signifiersGroup>
	</fdd:fileTypeSignifiers>
	<fdd:notes>
		<fdd:general>JSON is minimalist.  From <a href="http://www.json.org/fatfree.html">JSON: The Fat-Free Alternative to XML</a>, &quot;JSON has no version number. No revisions to the JSON grammar are anticipated.&quot;</fdd:general>
		<fdd:history>JSON 1.0
was
adopted as ECMA-404 in October 2013.</fdd:history>
	</fdd:notes>
	<fdd:formatSpecifications>
		<fdd:urls>
			<fdd:url>
				<fdd:urlReference>
					<link>http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf</link>
					<tag>ECMA-404: The JSON Data Exchange Format, 1st Edition, October 2013</tag>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://www.ietf.org/rfc/rfc4627.txt</link>
					<tag>RFC 4627.  The application/json Media Type for JavaScript Object Notation (JSON).  July 2006</tag>
					<comment>Includes the full specification for JSON.</comment>
				</fdd:urlReference>
			</fdd:url>
		</fdd:urls>
	</fdd:formatSpecifications>
	<fdd:usefulReferences>
		<fdd:urls>
			<fdd:url>
				<fdd:urlReference>
					<link>http://www.json.org/</link>
					<tag>Introducing JSON</tag>
					<comment>The home page of a minmalist web site for a minimalist standard.</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://www.json.org/fatfree.html</link>
					<tag>JSON: The Fat-Free Alternative to XML</tag>
					<comment>Presented at XML 2006 in Boston, by Douglas Crockford</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://en.wikipedia.org/wiki/JSON</link>
					<tag>Wikipedia entry for JSON</tag>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://json-schema.org/documentation.html</link>
					<tag>Documentation for JSON Schema</tag>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://spacetelescope.github.io/understanding-json-schema/index.html</link>
					<tag>Understanding JSON Schema</tag>
					<comment>From Michael Droettboom, Space Telescope Science Institute.</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://blog.appfog.com/why-json-will-continue-to-push-xml-out-of-the-picture/</link>
					<tag>Why JSON will continue to push XML out of the picture</tag>
					<comment>Undated blog post by Luc Perkins.  Probably from 2012.</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>https://blogs.oracle.com/xmlorb/entry/analysis_of_json_use_cases</link>
					<tag>Analysis of JSON use cases compared to XML.  </tag>
					<comment>April 2013 blog post from Oracle.com.  Extensive comparison of pros and cons.</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>https://devcentral.f5.com/articles/the-stealthy-ascendancy-of-json</link>
					<tag>The Stealthy Ascendancy of JSON</tag>
					<comment>April 27, 2011 blog post by Lori MacVittie at DevCentral.</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://www.esri.com/industries/landing-pages/geoservices/geoservices</link>
					<tag>ESRI GeoServices REST Specification</tag>
					<comment>JSON-based API to ESRI&apos;s server products.</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>https://sites.google.com/site/openwebfoundation/</link>
					<tag>Open Web Foundation</tag>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://fileformats.archiveteam.org/wiki/JSON</link>
					<tag>JSON page from Let&apos;s Solve the File Format Problem!</tag>
				</fdd:urlReference>
			</fdd:url>
		</fdd:urls>
	</fdd:usefulReferences>
</fdd:FDD>
